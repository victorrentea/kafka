spring.application.name: app

logging:
  pattern:
    console: "%d{HH:mm:ss.SSS} [%10.10t] %clr(%-5level %-30.30logger{29}) - %msg%n"
  level:
    org.apache.kafka.clients.producer.ProducerConfig: warn
    org.apache.kafka.clients.consumer.ConsumerConfig: warn
    org.apache.kafka.clients.admin.AdminClientConfig: warn
    org.apache.kafka.common.metrics.Metrics: warn
    org.apache.kafka.streams.StreamsConfig: warn
server:
  port: 8080
management.endpoints.web.exposure.include: "*"
spring:
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: victor.training.kafka.EventSerdes.EventSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      properties:
        max.poll.interval.ms: 2000
        commit.interval.ms: 0
        auto.commit.interval.ms: 0
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: victor.training.kafka.EventSerdes.EventDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: app
      enable-auto-commit: true
      auto-commit-interval: 1s
    listener:
      auto-startup: true # on application start
      concurrency: 2 # max threads=consumers listening per topic by this machine
        # = number of partitions that can be assigned to this instance
    bootstrap-servers: localhost:9092
    streams:
      application-id: app-streams
      properties:
        max.poll.interval.ms: 2000
        commit.interval.ms: 0
        auto.commit.interval.ms: 0
        request.timeout.ms: 2000
        auto.create.topics.enable: true
#        default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#  cloud:
#    function:
#      definition: listener;splitter;checkoutBook;mergeBookCheckout
#    stream:
#      bindings:
##        deduplicator-in-0.destination: myTopic
##        deduplicator-out-0.destination: myTopicUnique
#
#        consumer-in-0.destination: myTopic
#
#        splitter-in-0.destination: checkout
#        splitter-out-0.destination: checkout-book
#
#        checkoutBook-in-0.destination: checkout-book
#        checkoutBook-out-0.destination: book-checked-out
#
#        mergeBookCheckout-in-0.destination: book-checked-out
#        mergeBookCheckout-out-0.destination: checked-out
